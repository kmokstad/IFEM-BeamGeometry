CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

PROJECT(BeamGeometry)
MESSAGE(STATUS "Configuring project ${PROJECT_NAME}")

GET_FILENAME_COMPONENT(PARENT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${PARENT_SOURCE_DIR} ${PARENT_SOURCE_DIR}/Beam)

SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

OPTION(IFEM_USE_FFALIB "Compile with FFaLib?" OFF)
IF(IFEM_USE_FFALIB)
  MESSAGE(STATUS "Compiling with use of FFaLib")
  ADD_SUBDIRECTORY(FFaLib)
  STRING(APPEND CMAKE_CXX_FLAGS " -DHAS_FFALIB")
ENDIF(IFEM_USE_FFALIB)

SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)
FILE(GLOB BeamGeo_SOURCES *.C)
FILE(GLOB beamGeo_HEADERS *.h)
ADD_LIBRARY(BeamGeometry ${BeamGeo_SOURCES})
IF(TARGET FFaLib)
  TARGET_LINK_LIBRARIES(BeamGeometry FFaLib)
ENDIF(TARGET FFaLib)

IF(${CMAKE_PROJECT_NAME} STREQUAL ${PROJECT_NAME})
  MESSAGE(STATUS "Adding dummy testapps target for project ${CMAKE_PROJECT_NAME}")
  ADD_CUSTOM_TARGET(testapps echo "No apps here" DEPENDS BeamGeometry)
ENDIF(${CMAKE_PROJECT_NAME} STREQUAL ${PROJECT_NAME})
